version: "3.8"

services:
    db:
        image: postgres:10
        container_name: db
        volumes:
            - ./data/db:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - HOST=db
        networks:
            - mks
        restart: unless-stopped
    redis:
        image: redis:7.0-alpine
        container_name: redis
        command: redis-server --appendonly yes --replica-read-only no
        volumes:
            - ./redis/:/etc/redis/
        ports:
            - 6379:6379
        networks:
            - mks
        restart: unless-stopped
    backend:
        build:
          context: ./backend
        container_name: backend
        command: python manage.py runserver 0.0.0.0:8080
        volumes:
            - ./mks/:/opt/mks
            - ./:/tmp/
            - ./backend:/code/
        ports:
            - 8080:8080
        env_file:
            - ./.env
        depends_on:
            - db
        networks:
            - mks
        restart: unless-stopped
    celery:
        build:
          context: ./backend
        container_name: celery
        restart: always
        command: celery -A makeeasyhmis worker -B -l info
        volumes:
            - ./mks/:/opt/mks
            - ./:/tmp/
        env_file:
            - ./.env
        depends_on:
            - db
            - redis
            - backend
        networks:
            - mks

    frontend:
        build:
            context: ./front-end
        container_name: front-end
        restart: unless-stopped
        ports:
            - 3000:3000
        depends_on:
            - backend
        networks:
            - mks


networks:
    mks:
        name: mks
        driver: bridge
