
version: "3.9"

services:
    # nginx:
    #     restart: unless-stopped
    #     image: nginx:1.23-alpine
    #     ports:
    #         - 80:80
    #     volumes:
    #         # - ./nginx/:/etc/nginx/
    #         - ./static_files:/app/easymed/static
    #     networks:
    #         - mks
    db:
        image: postgres:14
        container_name: db
        volumes:
            - ./volumes/data/db:/var/lib/postgresql/data
            - ./preflight/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
        env_file:
            - ./.env      
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
        networks:
            - mks
        restart: unless-stopped

    redis:
        image: redis:7.0-alpine
        container_name: redis2
        command: redis-server --appendonly yes --replica-read-only no
        volumes:
            - ./volumes/redis/:/etc/redis/
        ports:
            - 6379:6379
        networks:
            - mks
        restart: unless-stopped

    backend:
        image: mosesmbadi/mkhmisbackend
        container_name: backend
        command: ./backend-entrypoint.sh
        volumes:
            - ./volumes/backend:/code/
        ports:
            - 8080:8080
        env_file:
            - ./.env
        depends_on:
            - db
        environment:
            - PG_INIT_WAIT_SQL=SELECT 1 FROM pg_stat_activity WHERE datname='${POSTGRES_DB}' AND state='idle' AND pid <> pg_backend_pid();
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
            interval: 5s
            timeout: 10s
            retries: 10
        restart: unless-stopped
        networks:
            - mks

    worker:
        restart: unless-stopped
        image: mosesmbadi/mkhmisbackend
        container_name: worker
        command: ./worker-entrypoint.sh
        volumes:
            - ./volumes/static_files:/app/easymed/static
        env_file:
            - ./.env    
        depends_on:
            - backend
            - redis
        networks:
            - mks   

    frontend:
        image: mosesmbadi/mkhmisfrontend
        container_name: front-end
        restart: unless-stopped
        ports:
            - 3000:3000
        depends_on:
            - backend
        networks:
            - mks    

networks:
    mks:
        name: mks
        driver: bridge
